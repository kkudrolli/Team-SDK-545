$version Generated by VerilatedVcd $end
$date Tue Apr 15 19:42:37 2014
 $end
$timescale 1ns $end

 $scope module top $end
  $var wire  1 9 clk $end
  $scope module $unit $end
   $var wire  1 # global_bit $end
  $upscope $end
  $scope module v $end
   $var wire  1 9 clk $end
   $var wire 32 $ cyc [31:0] $end
   $var real 64 3 v_arr_real(0) $end
   $var real 64 5 v_arr_real(1) $end
   $var wire  2 * v_arrp [2:1] $end
   $var wire  4 + v_arrp_arrp [3:0] $end
   $var wire  4 , v_arrp_strp [3:0] $end
   $var wire  1 : v_arru(1) $end
   $var wire  1 ; v_arru(2) $end
   $var wire  2 - v_arru_arrp(3) [2:1] $end
   $var wire  2 . v_arru_arrp(4) [2:1] $end
   $var wire  1 < v_arru_arru(3)(1) $end
   $var wire  1 = v_arru_arru(3)(2) $end
   $var wire  1 > v_arru_arru(4)(1) $end
   $var wire  1 ? v_arru_arru(4)(2) $end
   $var wire  2 / v_arru_strp(3) [1:0] $end
   $var wire  2 0 v_arru_strp(4) [1:0] $end
   $var real 64 1 v_real $end
   $var wire 64 % v_str32x2 [63:0] $end
   $var wire  2 ' v_strp [1:0] $end
   $var wire  4 ( v_strp_strp [3:0] $end
   $var wire  2 ) v_unip_strp [1:0] $end
   $scope module p2 $end
    $var wire 32 @ PARAM [31:0] $end
   $upscope $end
   $scope module p3 $end
    $var wire 32 A PARAM [31:0] $end
   $upscope $end
   $scope module unnamedblk1 $end
    $var wire 32 7 b [31:0] $end
    $scope module unnamedblk2 $end
     $var wire 32 8 a [31:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
1#
b00000000000000000000000000000000 $
b0000000000000000000000000000000000000000000000000000000011111111 %
b00 '
b0000 (
b00 )
b00 *
b0000 +
b0000 ,
b00 -
b00 .
b00 /
b00 0
r0 1
r0 3
r0 5
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
09
0:
0;
0<
0=
0>
0?
b00000000000000000000000000000010 @
b00000000000000000000000000000011 A
#10
b00000000000000000000000000000001 $
b0000000000000000000000000000000100000000000000000000000011111110 %
b11 '
b1111 (
b11 )
b11 *
b1111 +
b1111 ,
b11 -
b11 .
b11 /
b11 0
r0.1 1
r0.2 3
r0.3 5
b00000000000000000000000000000101 7
b00000000000000000000000000000101 8
19
#15
09
#20
b00000000000000000000000000000010 $
b0000000000000000000000000000001000000000000000000000000011111101 %
b00 '
b0000 (
b00 )
b00 *
b0000 +
b0000 ,
b00 -
b00 .
b00 /
b00 0
r0.2 1
r0.4 3
r0.6 5
19
#25
09
#30
b00000000000000000000000000000011 $
b0000000000000000000000000000001100000000000000000000000011111100 %
b11 '
b1111 (
b11 )
b11 *
b1111 +
b1111 ,
b11 -
b11 .
b11 /
b11 0
r0.3 1
r0.6000000000000001 3
r0.8999999999999999 5
19
#35
09
#40
b00000000000000000000000000000100 $
b0000000000000000000000000000010000000000000000000000000011111011 %
b00 '
b0000 (
b00 )
b00 *
b0000 +
b0000 ,
b00 -
b00 .
b00 /
b00 0
r0.4 1
r0.8 3
r1.2 5
19
#45
09
#50
b00000000000000000000000000000101 $
b0000000000000000000000000000010100000000000000000000000011111010 %
b11 '
b1111 (
b11 )
b11 *
b1111 +
b1111 ,
b11 -
b11 .
b11 /
b11 0
r0.5 1
r1 3
r1.5 5
19
#55
09
#60
b00000000000000000000000000000110 $
b0000000000000000000000000000011000000000000000000000000011111001 %
b00 '
b0000 (
b00 )
b00 *
b0000 +
b0000 ,
b00 -
b00 .
b00 /
b00 0
r0.6 1
r1.2 3
r1.8 5
19
