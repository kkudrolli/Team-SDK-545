<?xml version="1.0" encoding="UTF-8"?>
<spirit:component xmlns:xilinx="http://www.xilinx.com"
		xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<spirit:vendor>xilinx.com</spirit:vendor>
	<spirit:library>customized_ip</spirit:library>
	<spirit:name>usb_axi_quad_spi_0_0</spirit:name>
	<spirit:version>1.0</spirit:version>
	<spirit:busInterfaces>
		<spirit:busInterface>
			<spirit:name>SPI_0</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="spi"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="spi_rtl"
					spirit:version="1.0"/>
			<spirit:master/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>IO0_I</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>io0_i</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>IO0_O</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>io0_o</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>IO0_T</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>io0_t</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>IO1_I</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>io1_i</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>IO1_O</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>io1_o</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>IO1_T</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>io1_t</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>IO2_I</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>io2_i</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>IO2_O</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>io2_o</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>IO2_T</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>io2_t</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>IO3_I</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>io3_i</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>IO3_O</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>io3_o</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>IO3_T</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>io3_t</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>SCK_I</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>sck_i</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>SCK_O</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>sck_o</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>SCK_T</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>sck_t</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>SPISEL</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>spisel</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>SS_I</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>ss_i</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>SS_O</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>ss_o</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>SS_T</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>ss_t</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>BOARD.ASSOCIATED_PARAM</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SPI_0.BOARD.ASSOCIATED_PARAM">QSPI_BOARD_INTERFACE</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>STARTUP_IO</spirit:name>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="display_startup_io"
					spirit:name="startup_io"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="display_startup_io"
					spirit:name="startup_io_rtl"
					spirit:version="1.0"/>
			<spirit:master/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CFGCLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>cfgclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CFGMCLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>cfgmclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>DI</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>di</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>EOS</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>eos</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>PREQ</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>preq</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_STARTUP&apos;)) = 1">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>AXI_LITE</spirit:name>
			<spirit:displayName>AXI_LITE</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_araddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_arready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_arvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_awaddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_awready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_awvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_bready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_bresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_bvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_rdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_rready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_rresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_rvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_wdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_wready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_wstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_wvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>lite_clk</spirit:name>
			<spirit:displayName>lite_clk</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.LITE_CLK.ASSOCIATED_BUSIF">AXI_LITE</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.LITE_CLK.ASSOCIATED_RESET">s_axi_aresetn</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>lite_reset</spirit:name>
			<spirit:displayName>lite_reset</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.LITE_RESET.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>interrupt</spirit:name>
			<spirit:displayName>interrupt</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="interrupt"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="interrupt_rtl"
					spirit:version="1.0"/>
			<spirit:master/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>INTERRUPT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>ip2intc_irpt</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>SENSITIVITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.INTERRUPT.SENSITIVITY">EDGE_RISING</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>AXI_FULL</spirit:name>
			<spirit:displayName>AXI_FULL</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="interface"
					spirit:name="aximm_rtl"
					spirit:version="1.0"/>
			<spirit:slave>
				<spirit:memoryMapRef spirit:memoryMapRef="aximm"/>
			</spirit:slave>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_araddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARBURST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_arburst</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARCACHE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_arcache</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_arid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARLEN</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_arlen</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARLOCK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_arlock</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_arprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_arready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARSIZE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_arsize</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>ARVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_arvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWADDR</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_awaddr</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWBURST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_awburst</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWCACHE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_awcache</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_awid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWLEN</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_awlen</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWLOCK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_awlock</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWPROT</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_awprot</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_awready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWSIZE</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_awsize</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>AWVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_awvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_bid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_bready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_bresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>BVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_bvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_rdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_rid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_rlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_rready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RRESP</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_rresp</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_rvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WDATA</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_wdata</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WLAST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_wlast</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WREADY</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_wready</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WSTRB</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_wstrb</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>WVALID</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_wvalid</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>full_reset</spirit:name>
			<spirit:displayName>full_reset</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="reset_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>RST</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_aresetn</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>POLARITY</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.FULL_RESET.POLARITY">ACTIVE_LOW</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>full_clk</spirit:name>
			<spirit:displayName>full_clk</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>s_axi4_aclk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.FULL_CLK.ASSOCIATED_BUSIF">AXI_FULL</spirit:value>
				</spirit:parameter>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_RESET</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.FULL_CLK.ASSOCIATED_RESET">s_axi4_aresetn</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
			<spirit:vendorExtensions>
				<xilinx:busInterfaceInfo>
					<xilinx:enablement>
						<xilinx:presence>optional</xilinx:presence>
						<xilinx:isEnabled xilinx:resolve="dependent"
								xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 1 or spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:busInterfaceInfo>
			</spirit:vendorExtensions>
		</spirit:busInterface>
		<spirit:busInterface>
			<spirit:name>spi_clk</spirit:name>
			<spirit:displayName>spi_clk</spirit:displayName>
			<spirit:busType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock"
					spirit:version="1.0"/>
			<spirit:abstractionType spirit:vendor="xilinx.com"
					spirit:library="signal"
					spirit:name="clock_rtl"
					spirit:version="1.0"/>
			<spirit:slave/>
			<spirit:portMaps>
				<spirit:portMap>
					<spirit:logicalPort>
						<spirit:name>CLK</spirit:name>
					</spirit:logicalPort>
					<spirit:physicalPort>
						<spirit:name>ext_spi_clk</spirit:name>
					</spirit:physicalPort>
				</spirit:portMap>
			</spirit:portMaps>
			<spirit:parameters>
				<spirit:parameter>
					<spirit:name>ASSOCIATED_BUSIF</spirit:name>
					<spirit:value spirit:id="BUSIFPARAM_VALUE.SPI_CLK.ASSOCIATED_BUSIF">SPI_0</spirit:value>
				</spirit:parameter>
			</spirit:parameters>
		</spirit:busInterface>
	</spirit:busInterfaces>
	<spirit:memoryMaps>
		<spirit:memoryMap>
			<spirit:name>aximm</spirit:name>
			<spirit:addressBlock>
				<spirit:name>MEM0</spirit:name>
				<spirit:baseAddress>0</spirit:baseAddress>
				<spirit:range spirit:format="long"
						spirit:minimum="256">4096</spirit:range>
				<spirit:width>32</spirit:width>
				<spirit:usage>register</spirit:usage>
				<spirit:access>read-write</spirit:access>
				<spirit:parameters>
					<spirit:parameter>
						<spirit:name>OFFSET_BASE_PARAM</spirit:name>
						<spirit:value spirit:id="ADDRBLOCKPARAM_VALUE.MEM0.OFFSET_BASE_PARAM">C_S_AXI4_BASEADDR</spirit:value>
					</spirit:parameter>
					<spirit:parameter>
						<spirit:name>OFFSET_HIGH_PARAM</spirit:name>
						<spirit:value spirit:id="ADDRBLOCKPARAM_VALUE.MEM0.OFFSET_HIGH_PARAM">C_S_AXI4_HIGHADDR</spirit:value>
					</spirit:parameter>
				</spirit:parameters>
				<spirit:vendorExtensions>
					<xilinx:addressBlockInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 1 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:addressBlockInfo>
				</spirit:vendorExtensions>
			</spirit:addressBlock>
		</spirit:memoryMap>
	</spirit:memoryMaps>
	<spirit:model>
		<spirit:ports>
			<spirit:port>
				<spirit:name>ext_spi_clk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled>true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_aclk</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 1 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_aresetn</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 1 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_awaddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">6</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_awvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_awready</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_wdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_wstrb</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_wvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_wready</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_bresp</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_bvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_bready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_araddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">6</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_arvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_arready</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_rdata</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_rresp</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_rvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi_rready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 0 or  spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_awid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_S_AXI4_ID_WIDTH&apos;)) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_S_AXI4_ID_WIDTH&apos;)) != 0) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 1 or     spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_awaddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SPI_MEM_ADDR_BITS&apos;))-1)">23</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_awlen</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">7</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_awsize</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_awburst</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_awlock</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_awcache</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_awprot</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_awvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_awready</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_wdata</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_wstrb</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_wlast</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_wvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_wready</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_bid</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_S_AXI4_ID_WIDTH&apos;)) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_S_AXI4_ID_WIDTH&apos;)) != 0) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 1 or     spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_bresp</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_bvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_bready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_arid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_S_AXI4_ID_WIDTH&apos;)) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_S_AXI4_ID_WIDTH&apos;)) != 0) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 1 or     spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_araddr</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SPI_MEM_ADDR_BITS&apos;))-1)">23</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_arlen</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">7</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_arsize</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_arburst</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_arlock</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_arcache</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_arprot</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">2</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_arvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_arready</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_rid</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_S_AXI4_ID_WIDTH&apos;)) - 1)">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.C_S_AXI4_ID_WIDTH&apos;)) != 0) and (spirit:decode(id(&apos;MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE&apos;)) = 1 or     spirit:decode(id(&apos;MODELPARAM_VALUE.C_XIP_MODE&apos;)) = 1)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_rdata</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">31</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_rresp</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">1</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_rlast</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_rvalid</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>s_axi4_rready</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>io0_i</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled>true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>io0_o</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled>true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>io0_t</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled>true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>io1_i</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled>true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>io1_o</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled>true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>io1_t</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled>true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>io2_i</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SPI_MODE&apos;)) = 2)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>io2_o</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SPI_MODE&apos;)) = 2)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>io2_t</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SPI_MODE&apos;)) = 2)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>io3_i</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SPI_MODE&apos;)) = 2)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>io3_o</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SPI_MODE&apos;)) = 2)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>io3_t</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_SPI_MODE&apos;)) = 2)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>spisel</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>1</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;PARAM_VALUE.Master_mode&apos;)) = 0)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>sck_i</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_STARTUP&apos;)) = 0)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>sck_o</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_STARTUP&apos;)) = 0)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>sck_t</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_STARTUP&apos;)) = 0)">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ss_i</spirit:name>
				<spirit:wire>
					<spirit:direction>in</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_SS_BITS&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled>true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ss_o</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="dependent"
								spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_NUM_SS_BITS&apos;)) - 1)">0</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled>true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ss_t</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled>true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>cfgclk</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_STARTUP&apos;)) = 1)">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>cfgmclk</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_STARTUP&apos;)) = 1)">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>eos</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_STARTUP&apos;)) = 1)">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>preq</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_STARTUP&apos;)) = 1)">true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>di</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:vector>
						<spirit:left spirit:format="long"
								spirit:resolve="immediate">3</spirit:left>
						<spirit:right spirit:format="long"
								spirit:resolve="immediate">0</spirit:right>
					</spirit:vector>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic_vector</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
					<spirit:driver>
						<spirit:defaultValue>0</spirit:defaultValue>
					</spirit:driver>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:presence>optional</xilinx:presence>
							<xilinx:isEnabled xilinx:resolve="dependent"
									xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_USE_STARTUP&apos;)) = 1) and ((spirit:decode(id(&apos;MODELPARAM_VALUE.C_FAMILY&apos;)) = &quot;kintexu&quot;) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_FAMILY&apos;)) = &quot;virtexu&quot;))">false</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
			<spirit:port>
				<spirit:name>ip2intc_irpt</spirit:name>
				<spirit:wire>
					<spirit:direction>out</spirit:direction>
					<spirit:wireTypeDefs>
						<spirit:wireTypeDef>
							<spirit:typeName>std_logic</spirit:typeName>
							<spirit:viewNameRef>dummy_view</spirit:viewNameRef>
						</spirit:wireTypeDef>
					</spirit:wireTypeDefs>
				</spirit:wire>
				<spirit:vendorExtensions>
					<xilinx:portInfo>
						<xilinx:enablement>
							<xilinx:isEnabled>true</xilinx:isEnabled>
						</xilinx:enablement>
					</xilinx:portInfo>
				</spirit:vendorExtensions>
			</spirit:port>
		</spirit:ports>
		<spirit:modelParameters>
			<spirit:modelParameter xsi:type="spirit:nameValueTypeType"
					spirit:dataType="integer">
				<spirit:name>Async_Clk</spirit:name>
				<spirit:displayName>Async_Clk</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.Async_Clk"
						spirit:minimum="0"
						spirit:maximum="1">0</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="string">
				<spirit:name>C_FAMILY</spirit:name>
				<spirit:value spirit:format="string"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_FAMILY">virtex7</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="string">
				<spirit:name>C_SUB_FAMILY</spirit:name>
				<spirit:displayName>C Sub Family</spirit:displayName>
				<spirit:value spirit:format="string"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SUB_FAMILY">virtex7</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="string">
				<spirit:name>C_INSTANCE</spirit:name>
				<spirit:displayName>C Instance</spirit:displayName>
				<spirit:value spirit:format="string"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_INSTANCE">axi_quad_spi_inst</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SPI_MEM_ADDR_BITS</spirit:name>
				<spirit:displayName>XIP Mode SPI Memory Addressing Bits</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SPI_MEM_ADDR_BITS">24</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_TYPE_OF_AXI4_INTERFACE</spirit:name>
				<spirit:displayName>Type Of AXI4 Interface</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE"
						spirit:maximum="1"
						spirit:rangeType="long">0</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_XIP_MODE</spirit:name>
				<spirit:displayName>XIP Mode</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_XIP_MODE"
						spirit:maximum="1"
						spirit:rangeType="long">0</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_FIFO_DEPTH</spirit:name>
				<spirit:displayName>FIFO Depth</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_FIFO_DEPTH">16</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SCK_RATIO</spirit:name>
				<spirit:displayName>SCK Ratio</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SCK_RATIO">16</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_NUM_SS_BITS</spirit:name>
				<spirit:displayName>No. of Slave Select Bits</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_NUM_SS_BITS"
						spirit:minimum="1"
						spirit:maximum="32"
						spirit:rangeType="long">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_NUM_TRANSFER_BITS</spirit:name>
				<spirit:displayName>Num Transfer Bits</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_NUM_TRANSFER_BITS">8</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SPI_MODE</spirit:name>
				<spirit:displayName>SPI Mode</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SPI_MODE"
						spirit:maximum="2"
						spirit:rangeType="long">0</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_USE_STARTUP</spirit:name>
				<spirit:displayName>Use STARTUP Primitive</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_USE_STARTUP"
						spirit:maximum="1"
						spirit:rangeType="long">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_SPI_MEMORY</spirit:name>
				<spirit:displayName>SPI Memory</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_SPI_MEMORY"
						spirit:maximum="3"
						spirit:rangeType="long">1</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_S_AXI_ADDR_WIDTH</spirit:name>
				<spirit:displayName>C S Axi Addr Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="immediate"
						spirit:id="MODELPARAM_VALUE.C_S_AXI_ADDR_WIDTH"
						spirit:maximum="7"
						spirit:rangeType="long">7</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_S_AXI_DATA_WIDTH</spirit:name>
				<spirit:displayName>C S Axi Data Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="immediate"
						spirit:id="MODELPARAM_VALUE.C_S_AXI_DATA_WIDTH"
						spirit:maximum="32"
						spirit:rangeType="long">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_S_AXI4_ADDR_WIDTH</spirit:name>
				<spirit:displayName>C S Axi4 Addr Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="immediate"
						spirit:id="MODELPARAM_VALUE.C_S_AXI4_ADDR_WIDTH">24</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_S_AXI4_DATA_WIDTH</spirit:name>
				<spirit:displayName>C S Axi4 Data Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="immediate"
						spirit:id="MODELPARAM_VALUE.C_S_AXI4_DATA_WIDTH"
						spirit:maximum="32"
						spirit:rangeType="long">32</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="integer">
				<spirit:name>C_S_AXI4_ID_WIDTH</spirit:name>
				<spirit:displayName>C S Axi4 Id Width</spirit:displayName>
				<spirit:value spirit:format="long"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_S_AXI4_ID_WIDTH"
						spirit:minimum="0"
						spirit:maximum="16"
						spirit:rangeType="long">4</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="std_logic_vector">
				<spirit:name>C_S_AXI4_BASEADDR</spirit:name>
				<spirit:displayName>AXI4 Full Interface Base Address</spirit:displayName>
				<spirit:value spirit:format="bitString"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_S_AXI4_BASEADDR"
						spirit:bitStringLength="32">0xFFFFFFFF</spirit:value>
			</spirit:modelParameter>
			<spirit:modelParameter spirit:dataType="std_logic_vector">
				<spirit:name>C_S_AXI4_HIGHADDR</spirit:name>
				<spirit:displayName>AXI4 Full Interface High Address</spirit:displayName>
				<spirit:value spirit:format="bitString"
						spirit:resolve="generated"
						spirit:id="MODELPARAM_VALUE.C_S_AXI4_HIGHADDR"
						spirit:bitStringLength="32">0x00000000</spirit:value>
			</spirit:modelParameter>
		</spirit:modelParameters>
	</spirit:model>
	<spirit:choices>
		<spirit:choice>
			<spirit:name>choices_0</spirit:name>
			<spirit:enumeration spirit:text="Mixed">0</spirit:enumeration>
			<spirit:enumeration spirit:text="Winbond">1</spirit:enumeration>
			<spirit:enumeration spirit:text="Micron(Numonyx)">2</spirit:enumeration>
			<spirit:enumeration spirit:text="Spansion">3</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_1</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_2</spirit:name>
			<spirit:enumeration spirit:text="Standard">0</spirit:enumeration>
			<spirit:enumeration spirit:text="Dual">1</spirit:enumeration>
			<spirit:enumeration spirit:text="Quad">2</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_3</spirit:name>
			<spirit:enumeration>8</spirit:enumeration>
			<spirit:enumeration>16</spirit:enumeration>
			<spirit:enumeration>32</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_4</spirit:name>
			<spirit:enumeration>2</spirit:enumeration>
			<spirit:enumeration>4</spirit:enumeration>
			<spirit:enumeration>8</spirit:enumeration>
			<spirit:enumeration>16</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_5</spirit:name>
			<spirit:enumeration>0</spirit:enumeration>
			<spirit:enumeration>16</spirit:enumeration>
			<spirit:enumeration>256</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_6</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_7</spirit:name>
			<spirit:enumeration>24</spirit:enumeration>
			<spirit:enumeration>32</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_8</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_9</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_10</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_11</spirit:name>
			<spirit:enumeration spirit:text="false">0</spirit:enumeration>
			<spirit:enumeration spirit:text="true">1</spirit:enumeration>
		</spirit:choice>
		<spirit:choice>
			<spirit:name>choices_12</spirit:name>
			<spirit:enumeration spirit:text="Custom">Custom</spirit:enumeration>
		</spirit:choice>
	</spirit:choices>
	<spirit:description>SPI Interface for SPI Based Slave</spirit:description>
	<spirit:parameters>
		<spirit:parameter>
			<spirit:name>C_SPI_MEMORY</spirit:name>
			<spirit:displayName>SPI Memory</spirit:displayName>
			<spirit:description>This parameter should be set for tagetting the SPI flash memory. Please refer PG for more reference. Allowed values are 0= Mixed Flash, 1= Winbond SPI Flash, 2= Micron SPI Flash(Numonyx), 3= Spansion SPI Flash.</spirit:description>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SPI_MEMORY"
					spirit:choiceRef="choices_0"
					spirit:order="40">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_USE_STARTUP</spirit:name>
			<spirit:displayName>Use STARTUPE2 Primitive</spirit:displayName>
			<spirit:description>This parameter should be set when the targeted FPGA have STARTUPE2 block for routing the SPI clock. Please refer PG for more reference. Allowed values are 0= STARTUP is not included, 1= STARTUP is included. Example Design is not supported when STARTUPE2 block is chosen in the design.</spirit:description>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_USE_STARTUP"
					spirit:choiceRef="choices_1"
					spirit:order="70">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SPI_MODE</spirit:name>
			<spirit:displayName>SPI Mode</spirit:displayName>
			<spirit:description>This parameter should be set while choosing the SPI mode of the core. Please refer PG for more reference. Allowed values are 0= Standard SPI mode, 1= Dual SPI mode, 2= Quad SPI mode.</spirit:description>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SPI_MODE"
					spirit:choiceRef="choices_2"
					spirit:order="29"
					spirit:configGroups="0 UnGrouped">0</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_NUM_TRANSFER_BITS</spirit:name>
			<spirit:displayName>Num Transfer Bits</spirit:displayName>
			<spirit:description>This parameter should be set while choosing the no. of bits in single SPI transaction. Please refer PG for more reference. Allowed values are 8 or 16 or 32. The Standard SPI mode supports all the three values while Dual and Quad SPI mode supports only the 8-bit transfer mode.</spirit:description>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_NUM_TRANSFER_BITS"
					spirit:choiceRef="choices_3"
					spirit:order="60">8</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_NUM_SS_BITS</spirit:name>
			<spirit:displayName>No. of Slave Select Bits</spirit:displayName>
			<spirit:description>This parameter should be set to choose the no. SPI slave memories in design. This parameter decides the length of Slave Select port width of the core.</spirit:description>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_NUM_SS_BITS"
					spirit:order="80"
					spirit:minimum="1"
					spirit:maximum="32">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SCK_RATIO</spirit:name>
			<spirit:displayName>SCK Ratio</spirit:displayName>
			<spirit:description>This parameter should be set while choosing the division ratio for SPI clock. Please refer PG for more reference. Standard SPI mode has variable values for division ratio for SPI clock, while Dual and Quad mode allows only 2. XIP mode also allows division ratio of 2.</spirit:description>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SCK_RATIO"
					spirit:choiceRef="choices_4"
					spirit:order="90">16</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_FIFO_DEPTH</spirit:name>
			<spirit:displayName>FIFO Depth</spirit:displayName>
			<spirit:description>This parameter should be set while choosing FIFO depth. Please refer PG for more reference. Standard SPI mode provides the choice 0 or 16 or 256 beat FIFO depth, while Dual and Quad mode provides options of 16 or 256 beat FIFO depth.</spirit:description>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_FIFO_DEPTH"
					spirit:choiceRef="choices_5"
					spirit:order="100">16</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_XIP_MODE</spirit:name>
			<spirit:displayName>XIP Mode</spirit:displayName>
			<spirit:description>This parameter should be set while choosing the core to operate in eXecute In Place (XIP) mode. Please refer PG for more reference.</spirit:description>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_XIP_MODE"
					spirit:choiceRef="choices_6"
					spirit:order="10">0</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SPI_MEM_ADDR_BITS</spirit:name>
			<spirit:displayName>XIP Mode Memory Addressing Bits</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SPI_MEM_ADDR_BITS"
					spirit:choiceRef="choices_7"
					spirit:order="11">24</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">false</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_FAMILY</spirit:name>
			<spirit:displayName>Sub Mode</spirit:displayName>
			<spirit:value spirit:format="string"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_FAMILY"
					spirit:order="100000">virtex7</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SUB_FAMILY</spirit:name>
			<spirit:displayName>Sub Mode</spirit:displayName>
			<spirit:value spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SUB_FAMILY"
					spirit:order="10000">virtex7</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_TYPE_OF_AXI4_INTERFACE</spirit:name>
			<spirit:displayName>Type Of AXI4 Interface</spirit:displayName>
			<spirit:description>This parameter should be set while choosing the type of AXI bus interface.Please refer PG for more reference. Allowed values are 0= AXI4 Lite Interface, 1= AXI4 Memory Mapped Interface.</spirit:description>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_TYPE_OF_AXI4_INTERFACE"
					spirit:choiceRef="choices_8"
					spirit:order="20">0</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_INSTANCE</spirit:name>
			<spirit:displayName>C Instance</spirit:displayName>
			<spirit:value spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_INSTANCE"
					spirit:order="10001">axi_quad_spi_inst</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>Component_Name</spirit:name>
			<spirit:value spirit:resolve="user"
					spirit:id="PARAM_VALUE.Component_Name"
					spirit:order="1">usb_axi_quad_spi_0_0</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>Master_mode</spirit:name>
			<spirit:displayName>Enable Master Mode</spirit:displayName>
			<spirit:description>This parameter should be set while choosing the core in Standard SPI mode. Please refer PG for more reference. Standard SPI mode can operate in Master SPI or Slave SPI mode, while Dual and Quad mode operates only in Master SPI mode.</spirit:description>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.Master_mode"
					spirit:choiceRef="choices_9"
					spirit:order="200">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>FIFO_INCLUDED</spirit:name>
			<spirit:displayName>Enable FIFO</spirit:displayName>
			<spirit:description>This parameter should be set while choosing to include the FIFO in the design or notPlease refer PG for more reference. This parameter can be set only in Standard SPI mode where choice of FIFO inclusion or exclusion is provided. In case of Dual and Quad SPI modes the FIFO inclusion is mandatory.</spirit:description>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.FIFO_INCLUDED"
					spirit:choiceRef="choices_10"
					spirit:order="30">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>Multiples16</spirit:name>
			<spirit:displayName>Multiples16</spirit:displayName>
			<spirit:description>This parameter should be set while choosing the SPI clock in Standard SPI mode. Please refer PG for more reference.</spirit:description>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.Multiples16"
					spirit:order="150"
					spirit:minimum="1"
					spirit:maximum="128">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_SCK_RATIO1</spirit:name>
			<spirit:displayName>C Sck Ratio1</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_SCK_RATIO1"
					spirit:order="3000"
					spirit:minimum="1"
					spirit:maximum="32">1</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>Async_Clk</spirit:name>
			<spirit:displayName>Enable Async Clock Mode</spirit:displayName>
			<spirit:description>This parameter should be set while choosing the core to be used in Standalone mode and if clocks to core are different.</spirit:description>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.Async_Clk"
					spirit:choiceRef="choices_11"
					spirit:order="2000">0</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_S_AXI4_BASEADDR</spirit:name>
			<spirit:displayName>C S Axi4 Base Address</spirit:displayName>
			<spirit:value spirit:format="bitString"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_S_AXI4_BASEADDR"
					spirit:order="30000"
					spirit:configGroups="1 Addresses"
					spirit:bitStringLength="32">0xFFFFFFFF</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_S_AXI4_HIGHADDR</spirit:name>
			<spirit:displayName>C S Axi4 High Address</spirit:displayName>
			<spirit:value spirit:format="bitString"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_S_AXI4_HIGHADDR"
					spirit:order="40000"
					spirit:configGroups="1 Addresses"
					spirit:bitStringLength="32">0x00000000</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>USE_BOARD_FLOW</spirit:name>
			<spirit:displayName>Generate Board based IO Constraints</spirit:displayName>
			<spirit:value spirit:format="bool"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.USE_BOARD_FLOW"
					spirit:order="38">false</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>QSPI_BOARD_INTERFACE</spirit:name>
			<spirit:displayName>QSPI Board Interface</spirit:displayName>
			<spirit:value spirit:resolve="user"
					spirit:id="PARAM_VALUE.QSPI_BOARD_INTERFACE"
					spirit:choiceRef="choices_12"
					spirit:order="39">Custom</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
		<spirit:parameter>
			<spirit:name>C_S_AXI4_ID_WIDTH</spirit:name>
			<spirit:displayName>C S Axi4 Id Width</spirit:displayName>
			<spirit:value spirit:format="long"
					spirit:resolve="user"
					spirit:id="PARAM_VALUE.C_S_AXI4_ID_WIDTH"
					spirit:order="40"
					spirit:minimum="0"
					spirit:maximum="16">4</spirit:value>
			<spirit:vendorExtensions>
				<xilinx:parameterInfo>
					<xilinx:enablement>
						<xilinx:isEnabled xilinx:resolve="dependent">true</xilinx:isEnabled>
					</xilinx:enablement>
				</xilinx:parameterInfo>
			</spirit:vendorExtensions>
		</spirit:parameter>
	</spirit:parameters>
	<spirit:vendorExtensions>
		<xilinx:coreExtensions>
			<xilinx:taxonomies>
				<xilinx:taxonomy>/Embedded_Processing/AXI_Peripheral/Low_Speed_Peripheral</xilinx:taxonomy>
			</xilinx:taxonomies>
			<xilinx:displayName>AXI Quad SPI</xilinx:displayName>
			<xilinx:autoFamilySupportLevel>level_2</xilinx:autoFamilySupportLevel>
			<xilinx:vendorURL>http://www.xilinx.com</xilinx:vendorURL>
			<xilinx:coreRevision>4</xilinx:coreRevision>
			<xilinx:paymentRequired>false</xilinx:paymentRequired>
			<xilinx:upgrades>
				<xilinx:canUpgradeFrom>xilinx.com:ip:axi_quad_spi:3.1</xilinx:canUpgradeFrom>
			</xilinx:upgrades>
			<xilinx:coreCreationDateTime>2015-06-24T20:05:07Z</xilinx:coreCreationDateTime>
		</xilinx:coreExtensions>
		<xilinx:packagingInfo>
			<xilinx:xilinxVersion>2015.2</xilinx:xilinxVersion>
			<xilinx:checksum xilinx:scope="busInterfaces"
					xilinx:value="cef24490"/>
			<xilinx:checksum xilinx:scope="memoryMaps"
					xilinx:value="55a3a369"/>
			<xilinx:checksum xilinx:scope="fileGroups"
					xilinx:value="0d1e37cc"/>
			<xilinx:checksum xilinx:scope="ports"
					xilinx:value="cfc6954e"/>
			<xilinx:checksum xilinx:scope="hdlParameters"
					xilinx:value="f5ff0b2a"/>
			<xilinx:checksum xilinx:scope="parameters"
					xilinx:value="9a140419"/>
		</xilinx:packagingInfo>
	</spirit:vendorExtensions>
</spirit:component>